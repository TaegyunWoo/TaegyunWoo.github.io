I"G0<p><br/><br/></p>
<blockquote>
<p><a href="https://github.com/TaegyunWoo/algorithm-study/blob/main/src/main/java/sort/%EC%84%B1%EC%A0%81%EC%9D%B4_%EB%82%AE%EC%9D%80_%EC%88%9C%EC%84%9C%EB%A1%9C_%ED%95%99%EC%83%9D_%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0.java">소스코드</a></p>
</blockquote>
<br/>
<h1 id="section">성적이 낮은 순서로 학생 출력하기</h1>
<h2 id="section-1">문제</h2>
<h3 id="section-2">문제 정의</h3>
<ul>
<li>N명의 학생 정보가 있다. 학생 정보는 학생의 이름과 학생의 성적으로 구분된다.</li>
<li>각 학생의 이름과 성적 정보가 주어졌을 때 성적이 낮은 순서대로 학생의 이름을 출력하는 프로그램을 작성하시오.</li>
</ul>
<br/>
<h3 id="section-3">입력조건</h3>
<ul>
<li>첫째 줄에 학생의 수 N이 입력된다.
<ul>
<li>N: 1 이상, 100,000 이하</li>
</ul>
</li>
<li>두 번째 줄부터 N+1 번째 줄까지 학생의 이름을 나타내는 문자열 A와 학생의 성적을 나타내는 정수 B가 공백으로 구분되어 입력된다.<br />
문자열 A의 길이와 학생의 성적은 100 이하의 자연수이다.</li>
</ul>
<br/>
<h3 id="section-4">출력조건</h3>
<ul>
<li>모든 학생의 이름을 성적이 낮은 순서대로 출력한다. 성적이 동일한 학생들의 순서는 자유롭게 출력해도 괜찮다.</li>
</ul>
<br/>
<h3 id="section-5">입·출력 예시</h3>
<ul>
<li>
<p>입력</p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>2
홍길동 95
이순신 77
김철수 84
</code></pre></div></div>
</li>
<li>
<p>출력</p>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>이순신 김철수 홍길동
</code></pre></div></div>
</li>
</ul>
<br/>
<h2 id="section-6">풀이</h2>
<h3 id="section-7">문제 해설</h3>
<ul>
<li>학생의 정보가 최대 100,000개까지 입력될 수 있으므로, 최악의 경우 <code>O(nlogn)</code>을 보장하는 알고리즘을 이용하거나, <code>O(n)</code>을 보장하는 계수 정렬을 이용하면 된다.</li>
</ul>
<br/>
<h3 id="section-8">소스코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">sort</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">time.TimeCheck</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.stream.Stream</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">성적이_낮은_순서로_학생_출력하기</span> <span class="o">{</span>

  <span class="c1">//풀이A</span>
  <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">solution1</span><span class="o">(</span><span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Entity</span><span class="o">&gt;</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
    <span class="kt">int</span> <span class="n">maxScore</span> <span class="o">=</span> <span class="mi">100</span><span class="o">;</span>
    <span class="nc">ArrayList</span><span class="o">[]</span> <span class="n">answerAry</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">[</span><span class="n">maxScore</span> <span class="o">+</span> <span class="mi">1</span><span class="o">];</span>

    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">answerAry</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
      <span class="n">answerAry</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="k">for</span> <span class="o">(</span><span class="nc">Entity</span> <span class="n">e</span> <span class="o">:</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
      <span class="n">answerAry</span><span class="o">[</span><span class="n">e</span><span class="o">.</span><span class="na">score</span><span class="o">].</span><span class="na">add</span><span class="o">(</span><span class="n">e</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="k">for</span> <span class="o">(</span><span class="nc">ArrayList</span> <span class="n">arrayList</span> <span class="o">:</span> <span class="n">answerAry</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">for</span> <span class="o">(</span><span class="nc">Object</span> <span class="n">o</span> <span class="o">:</span> <span class="n">arrayList</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">Entity</span> <span class="n">e</span> <span class="o">=</span> <span class="o">(</span><span class="nc">Entity</span><span class="o">)</span> <span class="n">o</span><span class="o">;</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">name</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);</span>
      <span class="o">}</span>
    <span class="o">}</span>

  <span class="o">}</span>

  <span class="c1">//풀이B</span>
  <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">solution2</span><span class="o">(</span><span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Entity</span><span class="o">&gt;</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
    <span class="n">n</span><span class="o">.</span><span class="na">stream</span><span class="o">().</span><span class="na">sorted</span><span class="o">(</span><span class="nc">Comparator</span><span class="o">.</span><span class="na">comparing</span><span class="o">(</span><span class="nl">Entity:</span><span class="o">:</span><span class="n">getScore</span><span class="o">)).</span><span class="na">forEach</span><span class="o">(</span>
      <span class="o">(</span><span class="n">entity</span><span class="o">)</span> <span class="o">-&gt;</span> <span class="o">{</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">entity</span><span class="o">.</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">" "</span><span class="o">);}</span>
    <span class="o">);</span>
  <span class="o">}</span>

  <span class="cm">/**
   * 실행 메서드
   */</span>
  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">execute</span><span class="o">()</span> <span class="o">{</span>
    <span class="nc">Scanner</span> <span class="n">scn</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
    <span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="n">scn</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
    <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">Entity</span><span class="o">&gt;</span> <span class="n">n</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>
    <span class="n">scn</span><span class="o">.</span><span class="na">nextLine</span><span class="o">();</span>
    <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">size</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
      <span class="nc">String</span><span class="o">[]</span> <span class="n">tmp</span> <span class="o">=</span> <span class="n">scn</span><span class="o">.</span><span class="na">nextLine</span><span class="o">().</span><span class="na">split</span><span class="o">(</span><span class="s">" "</span><span class="o">);</span>
      <span class="n">n</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">Entity</span><span class="o">(</span><span class="n">tmp</span><span class="o">[</span><span class="mi">0</span><span class="o">],</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">parseInt</span><span class="o">(</span><span class="n">tmp</span><span class="o">[</span><span class="mi">1</span><span class="o">])));</span>
    <span class="o">}</span>

    <span class="nc">TimeCheck</span><span class="o">.</span><span class="na">start</span><span class="o">();</span>

    <span class="c1">//solution1(n);</span>
    <span class="n">solution2</span><span class="o">(</span><span class="n">n</span><span class="o">);</span>

    <span class="nc">TimeCheck</span><span class="o">.</span><span class="na">end</span><span class="o">();</span>

  <span class="o">}</span>

  <span class="kd">private</span> <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Entity</span> <span class="o">{</span>
    <span class="kd">private</span> <span class="nc">String</span> <span class="n">name</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">score</span><span class="o">;</span>

    <span class="kd">public</span> <span class="nf">Entity</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">,</span> <span class="kt">int</span> <span class="n">score</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">this</span><span class="o">.</span><span class="na">name</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
      <span class="k">this</span><span class="o">.</span><span class="na">score</span> <span class="o">=</span> <span class="n">score</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">name</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getScore</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="n">score</span><span class="o">;</span>
    <span class="o">}</span>
  <span class="o">}</span>

<span class="o">}</span>

</code></pre></div></div>
<ul>
<li><code>solution1</code> 메서드
<ul>
<li>계수정렬에서 착안한 해결법이다.</li>
<li>찾은 값(score)을 index로 삼아 ‘개수를 나타내는 value’에 1을 더하는 기존(계수정렬)의 방식 대신, ‘List형 value’에 Entity 객체를 추가하는 방식으로 문제를 해결한다.</li>
</ul>
</li>
<li><code>solution2</code> 메서드
<ul>
<li>자바에서 제공하는 API를 사용하여, 문제를 해결한다.</li>
<li>훨씬 간결한 것을 알 수 있다.</li>
</ul>
</li>
</ul>
<p><br><br></p>
<hr />
<br>
<div style="font-style: italic;color: gray;">
  <ul>
    <li>나동빈, 『이것이 코딩 테스트다』</li>
  </ul>
  본 게시글은 위 교재를 기반으로 정리한 글입니다.
</div>
:ET