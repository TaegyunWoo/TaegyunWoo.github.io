I"0!<p><br/><br/></p>
<h1 id="section">메시지와 국제화</h1>
<h2 id="section-1">개요</h2>
<h3 id="section-2">메시지란?</h3>
<ul>
<li>여러 뷰 템플릿에서 공통적으로 사용되는 단어(메시지)를 <strong>한 곳에서 관리</strong> 할 수 있게 해주는 기능이다.</li>
<li>스프링은 기본적인 메시지 기능을 지원한다.</li>
</ul>
</br>
<h3 id="section-3">국제화란?</h3>
<ul>
<li>메시지 파일 ( <code>messages.properties</code> )를 각 나라별로 별도로 관리하면 구현할 수 있다.</li>
<li>사용자의 국가 정보는 <code>accept-langauge</code> 헤더 값을 통해 얻어올 수 있다. 이러한 정보를 통해, 적절한 메시지 파일을 선택하여 사용자에게 제공할 수 있다.</li>
<li>스프링은 기본적인 국제화 기능 역시 지원한다.</li>
</ul>
<p></br></br></p>
<h2 id="section-4">메시지 소스 설정</h2>
<p>메시지 기능은 (key,value) 형식으로 작성된 파일을 기반으로 동작한다. 파일 형식의 예시는 아래와 같다.</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#messages.properties 파일
<p>item=상품
item.id=상품 ID
item.itemName=상품명
item.price=가격
item.quantity=수량
</code></pre></div></div>
</br></p>
<h3 id="section-5">스프링에서의 설정 방법 (직접 등록)</h3>
<ul>
<li>스프링에서 메시지 관리 기능을 사용하려면 <code>MessageSource</code> 인터페이스의 구현체를 스프링 빈으로 등록해야한다.
<ul>
<li><code>MessageSource</code> 인터페이스의 구현체 = <code>ResourceBundleMessageSource</code> 클래스</li>
</ul>
</li>
</ul>
</br>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@Bean</span>
<span class="kd">public</span> <span class="nc">MessageSource</span> <span class="nf">messageSource</span><span class="o">()</span> <span class="o">{</span>
		<span class="nc">ResourceBundleMessageSource</span> <span class="n">messageSource</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ResourceBundleMessageSource</span><span class="o">();</span>
		<span class="n">messageSource</span><span class="o">.</span><span class="na">setBasenames</span><span class="o">(</span><span class="s">"messages"</span><span class="o">,</span> <span class="s">"errors"</span><span class="o">);</span>
		<span class="n">messageSource</span><span class="o">.</span><span class="na">setDefaultEncoding</span><span class="o">(</span><span class="s">"utf-8"</span><span class="o">);</span>
		<span class="k">return</span> <span class="n">messageSource</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>
<ul>
<li><code>messageSource.setBasenames(&quot;messages&quot;, &quot;errors&quot;)</code>
<ul>
<li>설정 파일의 이름을 지정한다.</li>
<li>매개변수 <code>messages</code> , <code>errors</code>
<ul>
<li><code>messages.properties</code> 파일과 <code>errors.properties</code> 을 읽어서 사용한다.</li>
<li>여러 파일을 한번에 지정할 수 있다.</li>
</ul>
</li>
<li>국제화 기능을 적용하려면, <code>messages_en.properties</code> , <code>messages_ko.properties</code> 와 같이 파일명을 설정하면 된다.
<ul>
<li>만약 찾을 수 있는 국제화 파일이 없으면, <code>messages.properties</code> 파일을 기본적으로 사용한다.</li>
</ul>
</li>
<li>메시지 파일의 위치
<ul>
<li><code>/main/resources/messages.properties</code></li>
<li><code>/main/resources/messages_en.properties</code></li>
<li><code>/main/resources/messages_ko.properties</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</br>
<ul>
<li><code>messageSource.setDefaultEncoding(&quot;utf-8&quot;)</code>
<ul>
<li>인코딩 정보를 지정한다.</li>
</ul>
</li>
</ul>
</br>
<h3 id="section-6">스프링 부트에서의 설정 방법</h3>
<ul>
<li>
<p>스프링 부트에서는 <code>MessageSource</code> 인터페이스의 구현체인 <code>ResourceBundleMessageSource</code> 클래스를 <strong>빈으로 자동 등록</strong> 한다.</p>
</li>
<li>
<p>따라서, 메시지 소스에 대한 세부 설정은 <code>application.properties</code> 에 작성하면 된다.</p>
</li>
<li>
<p>스프링 부트에서 <code>MessageSource</code> 를 스프링 빈으로 따로 등록하지 않고, 스프링 부트와 관련된 별도의 설정 ( <code>application.properties</code> 파일에 설정 )을 하지 않으면, <strong><code>messages</code> 라는 이름이 기본적으로 등록된다.</strong></p>
</li>
</ul>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#application.properties 파일
<p>spring.messages.basename=myMessages
</code></pre></div></div></p>
<ul>
<li>위와 같이 설정하면, <code>myMessages.properties</code> 파일을 메시지 파일로 처리한다. (필수로 설정해야하는 것은 아니다.)</li>
</ul>
<p></br></br></p>
<h2 id="section-7">메시지 파일 만들기</h2>
<ul>
<li>메시지 파일을 만들고 내용을 작성하여, 메시지 기능을 적용해보자.</li>
<li>국제화 테스트를 위해서 <code>messages_en</code> 파일도 추가할 것이다.</li>
</ul>
</br>
<h3 id="codemessagespropertiescode--"><code>messages.properties</code> 메시지 파일</h3>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hello=안녕
hello.name=안녕 {0}
</code></pre></div></div>
<ul>
<li><code>messages.properties</code> 파일은 기본 값으로 사용된다.</li>
<li>파일 경로는 <code>/main/resources/messages.properties</code> 이다.</li>
<li><code>{0}</code> 은 인수로 넘어온 값의 위치이다. 뒤에서 자세하게 설명하도록 하겠다.</li>
</ul>
</br>
<h3 id="codemessagesenpropertiescode--"><code>messages_en.properties</code> 메시지 파일</h3>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>hello=hi
hello.name=hi {0}
</code></pre></div></div>
<ul>
<li><code>messages_en.properties</code> 파일은 영어권 사용자에 대해, 적용되는 메시지 파일이다.</li>
<li>파일 경로는 <code>/main/resources/messages_en.properties</code> 이다.</li>
</ul>
<p></br></br></p>
<h2 id="section-8">타임리프 템플릿에서 메시지 출력하기</h2>
<ul>
<li>타임리프의 메시지 표현식 <code>#{...}</code> 을 사용하면 스프링의 메시지를 조회할 수 있다.</li>
<li>메시지 파일은 위에서 작성한 <code>messages.properties</code> 와 <code>messages_en.properties</code> 를 사용한다.</li>
</ul>
</br>
<h3 id="section-9">타임리프 템플릿</h3>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE HTML&gt;</span>
<span class="nt">&lt;html</span> <span class="na">xmlns:th=</span><span class="s">"http://www.thymeleaf.org"</span><span class="nt">&gt;</span>
<span class="nt">&lt;head&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
	메시지 hello= <span class="nt">&lt;p</span> <span class="na">th:text=</span><span class="s">"#{hello}"</span><span class="nt">&gt;&lt;/p&gt;</span>
	메시지 hello.name= <span class="nt">&lt;p</span> <span class="na">th:text=</span><span class="s">"#{hello.name('전달될_값')}"</span><span class="nt">&gt;&lt;/p&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>
</br>
<h3 id="section-10">결과</h3>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>메시지 hello= 안녕
메시지 hello.name= 안녕 전달될_값
</code></pre></div></div>
<ul>
<li>이때, 적용되는 것은 <code>messages.properties</code> 파일이다.</li>
</ul>
<blockquote>
<p><code>messages_en.properties</code> 를 적용해보고 싶다면, postman 등을 통해 요청메시지의 <code>accept-langauge</code> 헤더 값을 변경하여 확인해보자!</p>
</blockquote>
<br>
<hr />
<br>
<p><a href="https://inf.run/YPER"><img src="/assets/img/Inflearn_Spring_MVC2/logo.png" width="400px" height="300px"></a></p>
<ul>
<li><em>본 게시글은 김영한님의 강의를 토대로 정리한 글입니다.</em></li>
<li><em>더 자세한 내용을 알고 싶으신 분들이 계신다면, 해당 강의를 수강하시는 것을 추천드립니다.</em></li>
</ul>
:ET