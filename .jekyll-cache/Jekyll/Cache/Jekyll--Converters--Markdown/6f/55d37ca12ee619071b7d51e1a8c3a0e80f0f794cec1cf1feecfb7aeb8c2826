I"4Q<p><br/><br/></p>
<ul>
<li><strong><a href="https://github.com/TaegyunWoo/Spring-Test-Code-Example">예시 프로젝트 다운로드</a></strong></li>
</ul>
<h1 id="junit-5-">JUnit 5 개요</h1>
<h2 id="junit-5--1">JUnit 5 모듈</h2>
<p><img src="/assets/img/2021-09-15-TestFramework_JUnit5_SummaryAndBasicAnnotation/Untitled.png" alt="Untitled" /></p>
<br/>
<h3 id="junit-platform">JUnit Platform</h3>
<ul>
<li>테스트를 실행해주는 런처를 제공한다.</li>
<li>TestEngine API를 제공한다.</li>
</ul>
<br/>
<h3 id="jupiter">Jupiter</h3>
<ul>
<li>TestEngine API 구현체이다. (JUnit Platform 구현체이다.)</li>
<li><strong>JUnit 5를 제공한다.</strong></li>
<li><strong>스프링부트 2.2 이상의 버전으로 프로젝트 생성시, 자동으로 의존성 추가된다.</strong>
<ul>
<li><code>spring-boot-starter</code> 에 포함되어 있다.</li>
</ul>
</li>
</ul>
<br/>
<h3 id="vintage">Vintage</h3>
<ul>
<li>TestEngine API 구현체이다. (JUnit Platform 구현체이다.)</li>
<li><strong>JUnit 4와 3를 지원한다.</strong></li>
</ul>
<p><br/><br/><br/></p>
<h1 id="section">기본 애너테이션</h1>
<h2 id="section-1">기본 애너테이션 종류</h2>
<p>JUnit 5가 제공하는 기본 애너테이션은 다음과 같다.</p>
<ul>
<li><code>@Test</code></li>
<li><code>@BeforeAll</code></li>
<li><code>@AfterAll</code></li>
<li><code>@BeforeEach</code></li>
<li><code>@AfterEach</code></li>
<li><code>@Disabled</code></li>
<li><code>@DisplayName</code></li>
</ul>
<p><br/><br/></p>
<h2 id="section-2">전체 예시 도메인</h2>
<ul>
<li>애너테이션 설명을 하기 전, 예시 코드에 대한 기본 전제 코드를 설명하겠다.</li>
</ul>
<blockquote>
<p>자세한 것은 Github 참고 (최상단 내용 링크 참고)</p>
</blockquote>
<br/>
<h3 id="codestudycode-"><code>Study</code> 클래스</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Study</span> <span class="o">{</span>
<pre><code>&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StudyStatus&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;studyStatus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StudyStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DRAFT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Study&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Study&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;limit은 0보다 작을 수 없다.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Study&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;StudyStatus&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getStudyStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;studyStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getLimit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Study{&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;studyStatus=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;studyStatus&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;, limit=&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;, name='&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'\''&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
            &lt;span class=&quot;sc&quot;&gt;'}'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
</code></pre>
<p><span class="o">}</span>
</code></pre></div></div>
<br/></p>
<h3 id="codestudystatuscode-enum-"><code>StudyStatus</code> ENUM 클래스</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">enum</span> <span class="nc">StudyStatus</span> <span class="o">{</span>
    <span class="no">DRAFT</span><span class="o">,</span> <span class="no">STARTED</span><span class="o">,</span> <span class="no">ENDED</span><span class="o">,</span> <span class="no">OPENED</span>
<span class="o">}</span>
</code></pre></div></div>
<p><br/><br/></p>
<h2 id="codebeforeallcode"><code>@BeforeAll</code></h2>
<h3 id="section-3">기능</h3>
<ul>
<li>전체 테스트 메서드가 실행되기 전에, <strong>단 한번만 실행</strong>된다.</li>
<li>적용할 메서드는 <strong>static 으로 선언</strong>해야 한다.</li>
<li>적용할 메서드의 <strong>반환 값은 void</strong>이어야 한다.</li>
</ul>
<br/>
<h3 id="section-4">예시 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//import 생략</span>
<p><span class="kd">public</span> <span class="kd">class</span> <span class="nc">StudyTest</span> <span class="o">{</span>
<span class="nd">@BeforeAll</span>
<span class="kd">static</span> <span class="kt">void</span> <span class="nf">beforeAll</span><span class="o">()</span> <span class="o">{</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">“StudyTest.beforeAll”</span><span class="o">);</span>
<span class="o">}</span></p>
<pre><code>&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
</code></pre>
<p><span class="kt">void</span> <span class="nf">create</span><span class="o">()</span> <span class="o">{</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">“StudyTest.create1\n”</span><span class="o">);</span>
<span class="nc">Study</span> <span class="n">study</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Study</span><span class="o">();</span>
<span class="n">assertNotNull</span><span class="o">(</span><span class="n">study</span><span class="o">);</span>
<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div></p>
<p><br/><br/></p>
<h2 id="codeafterallcode"><code>@AfterAll</code></h2>
<h3 id="section-5">기능</h3>
<ul>
<li>전체 테스트 메서드가 실행되고 난 후에, <strong>단 한번만 실행</strong>된다.</li>
<li>적용할 메서드는 <strong>static 으로 선언</strong>해야 한다.</li>
<li>적용할 메서드의 <strong>반환 값은 void</strong>이어야 한다.</li>
</ul>
<br/>
<h3 id="section-6">예시 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//import 생략</span>
<p><span class="kd">public</span> <span class="kd">class</span> <span class="nc">StudyTest</span> <span class="o">{</span>
<span class="nd">@AfterAll</span>
<span class="kd">static</span> <span class="kt">void</span> <span class="nf">afterAll</span><span class="o">()</span> <span class="o">{</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">“StudyTest.afterAll”</span><span class="o">);</span>
<span class="o">}</span></p>
<pre><code>&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
</code></pre>
<p><span class="kt">void</span> <span class="nf">create</span><span class="o">()</span> <span class="o">{</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">“StudyTest.create1\n”</span><span class="o">);</span>
<span class="nc">Study</span> <span class="n">study</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Study</span><span class="o">();</span>
<span class="n">assertNotNull</span><span class="o">(</span><span class="n">study</span><span class="o">);</span>
<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div></p>
<p><br/><br/></p>
<h2 id="codebeforeeachcode"><code>@BeforeEach</code></h2>
<h3 id="section-7">기능</h3>
<ul>
<li>각 테스트 메서드가 실행되기 전, 각 테스트 메서드마다 실행된다.</li>
</ul>
<br/>
<h3 id="section-8">예시 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//import 생략</span>
<p><span class="kd">public</span> <span class="kd">class</span> <span class="nc">StudyTest</span> <span class="o">{</span></p>
<pre><code>&lt;span class=&quot;nd&quot;&gt;@BeforeEach&lt;/span&gt;
</code></pre>
<p><span class="kt">void</span> <span class="nf">beforeEach</span><span class="o">()</span> <span class="o">{</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">“StudyTest.beforeEach”</span><span class="o">);</span>
<span class="o">}</span></p>
<pre><code>&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
</code></pre>
<p><span class="kt">void</span> <span class="nf">create</span><span class="o">()</span> <span class="o">{</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">“StudyTest.create1\n”</span><span class="o">);</span>
<span class="nc">Study</span> <span class="n">study</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Study</span><span class="o">();</span>
<span class="n">assertNotNull</span><span class="o">(</span><span class="n">study</span><span class="o">);</span>
<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>
<br/></p>
<h2 id="codeaftereachcode"><code>@AfterEach</code></h2>
<h3 id="section-9">기능</h3>
<ul>
<li>각 테스트 메서드가 실행되고 난 후, 각 테스트 메서드마다 실행된다.</li>
</ul>
<br/>
<h3 id="section-10">예시 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//import 생략</span>
<p><span class="kd">public</span> <span class="kd">class</span> <span class="nc">StudyTest</span> <span class="o">{</span></p>
<pre><code>&lt;span class=&quot;nd&quot;&gt;@AfterEach&lt;/span&gt;
</code></pre>
<p><span class="kt">void</span> <span class="nf">afterEach</span><span class="o">()</span> <span class="o">{</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">“StudyTest.afterEach”</span><span class="o">);</span>
<span class="o">}</span></p>
<pre><code>&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
</code></pre>
<p><span class="kt">void</span> <span class="nf">create</span><span class="o">()</span> <span class="o">{</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">“StudyTest.create1\n”</span><span class="o">);</span>
<span class="nc">Study</span> <span class="n">study</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Study</span><span class="o">();</span>
<span class="n">assertNotNull</span><span class="o">(</span><span class="n">study</span><span class="o">);</span>
<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div></p>
<p><br/><br/></p>
<h2 id="codedisabledcode"><code>@Disabled</code></h2>
<h3 id="section-11">기능</h3>
<ul>
<li>해당 테스트 메서드를 비활성화한다.</li>
<li>전체 테스트 수행시 제외된다.</li>
</ul>
<br/>
<h3 id="section-12">예시 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//import 생략</span>
<p><span class="kd">public</span> <span class="kd">class</span> <span class="nc">StudyTest</span> <span class="o">{</span></p>
<pre><code>&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
</code></pre>
<p><span class="kt">void</span> <span class="nf">create1</span><span class="o">()</span> <span class="o">{</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">“StudyTest.create1\n”</span><span class="o">);</span>
<span class="nc">Study</span> <span class="n">study</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Study</span><span class="o">();</span>
<span class="n">assertNotNull</span><span class="o">(</span><span class="n">study</span><span class="o">);</span>
<span class="o">}</span></p>
<pre><code>&lt;span class=&quot;nd&quot;&gt;@Disabled&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
</code></pre>
<p><span class="kt">void</span> <span class="nf">create2</span><span class="o">()</span> <span class="o">{</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">“StudyTest.create1\n”</span><span class="o">);</span>
<span class="nc">Study</span> <span class="n">study</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Study</span><span class="o">();</span>
<span class="n">assertNotNull</span><span class="o">(</span><span class="n">study</span><span class="o">);</span>
<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div></p>
<p><br/><br/></p>
<h2 id="codedisplaynamecode"><code>@DisplayName</code></h2>
<h3 id="section-13">기능</h3>
<ul>
<li>어떤 테스트인지 테스트 이름을 보다 쉽게 표현할 수 있는 방법을 제공하는 애너테이션이다.</li>
<li><code>@DisplayNameGeneration</code> 대신 권장되는 애너테이션이다.</li>
</ul>
<br/>
<h3 id="section-14">예시 코드</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//import 생략</span>
<p><span class="kd">public</span> <span class="kd">class</span> <span class="nc">StudyTest</span> <span class="o">{</span></p>
<pre><code>&lt;span class=&quot;nd&quot;&gt;@DisplayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Study 객체 생성&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
</code></pre>
<p><span class="kt">void</span> <span class="nf">create1</span><span class="o">()</span> <span class="o">{</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">“StudyTest.create1\n”</span><span class="o">);</span>
<span class="nc">Study</span> <span class="n">study</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Study</span><span class="o">();</span>
<span class="n">assertNotNull</span><span class="o">(</span><span class="n">study</span><span class="o">);</span>
<span class="o">}</span></p>
<p><span class="o">}</span>
</code></pre></div></div>
<br></p>
<hr />
<br>
<p><a href="https://inf.run/htNB"><img src="/assets/img/Inflearn_Java_Test/logo.png" width="400px" height="300px"></a></p>
<ul>
<li><em>본 게시글은 백기선님의 강의를 토대로 정리한 글입니다.</em></li>
<li><em>더 자세한 내용을 알고 싶으신 분들이 계신다면, 해당 강의를 수강하시는 것을 추천드립니다.</em></li>
</ul>
:ET