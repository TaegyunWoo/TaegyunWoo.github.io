I"ԕ<p><br/><br/></p>
<h1 id="codewebmvctestcode--mockmvc-"><code>@WebMvcTest</code> 애너테이션과 MockMvc 활용</h1>
<h2 id="codewebmvctestcode"><code>@WebMvcTest</code></h2>
<h3 id="codewebmvctestcode-"><code>@WebMvcTest</code> 애너테이션이란?</h3>
<ul>
<li>MVC를 위한 테스트나, 컨트롤러를 테스트할 때 사용되는 애너테이션이다.</li>
<li><strong><code>@WebMvcTest</code> 사용시, 스캔 대상을 제한하여 <code>@SpringBootTest</code> 보다 빠른 효율을 보여준다.</strong></li>
<li><code>@WebMvcTest</code> 가 스캔하는 대상 목록
<ul>
<li><code>@Controller</code></li>
<li><code>@ControllerAdvice</code></li>
<li><code>@JsonComponent</code></li>
<li><code>Converter</code></li>
<li><code>GenericConverter</code></li>
<li><code>Filter</code></li>
<li><code>HandlerInterceptor</code></li>
<li><code>WebMvcConfigurer</code></li>
<li><code>HandlerMethodArgumentResolver</code></li>
</ul>
</li>
</ul>
<br/>
<h3 id="codewebmvctestcode-----"><code>@WebMvcTest</code> 가 자동으로 추가하는 항목 리스트</h3>
<ul>
<li><code>@WebMvcTest</code> 가 <strong>Auto Configure</strong>하는 항목은 다음 문서에서 확인할 수 있다.</li>
<li><code>@WebMvcTest</code> 뿐만 아니라, 다양한 Test에 대한 Auto Configure 항목을 확인할 수 있다.</li>
</ul>
<p><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/test-auto-configuration.html#test-auto-configuration">공식 문서 링크</a></p>
<br/>
<h3 id="section">장점</h3>
<ul>
<li>Web Application과 관련된 Bean들만 등록하기 때문에, 통합 테스트(<code>@SpringBootTest</code>)보다 빠르게 수행된다.</li>
<li>통합 테스트로 수행하기 힘든 테스트를 수행할 수 있다.
<ul>
<li>Ex) 결제 모듈 테스트시, 가짜 Mock 객체를 통해 테스트를 할 수 있다.</li>
</ul>
</li>
</ul>
<br/>
<h3 id="section-1">단점</h3>
<ul>
<li>요청부터 응답까지 모든 테스트를 Mock 기반으로 테스트하기 때문에 실제 환경에서는 제대로 동작하지 않을 수 있다.</li>
</ul>
<br/>
<h3 id="codewebmvctestcode-vs-codespringboottestcode"><code>@WebMvcTest</code> vs <code>@SpringBootTest</code></h3>
<ul>
<li><code>@WebMvcTest</code>
<ul>
<li><strong>특정 레이어만을 테스트한다. (유닛 테스트)</strong></li>
<li><strong>만약 다른 레이어에 해당하는 빈이 필요하다면 Mock 객체로 만들어야한다.</strong></li>
<li>레이어에 해당하는 빈만을 가져오므로 속도가 비교적 빠르다.</li>
<li>웹애플리케이션 컨텍스트를 초기화 하지만 모든 설정을 불러오는 것이 아니라 MVC레이어와 관련된 설정만 불러온다.</li>
<li>HTTP 요청은 mock을 이용해 가짜로 이뤄지고 실제 연결은 생성되지 않는다.</li>
</ul>
</li>
</ul>
<br/>
<ul>
<li><code>@SpringBootTest</code>
<ul>
<li><strong>Application Context 전체를 테스트한다. (통합 테스트)</strong></li>
<li>애플리케이션의 모든 범위를 불러와야하므로 속도가 느리다.</li>
<li>애플리케이션의 크기가 커질수록 불리하다.</li>
<li>웹 애플리케이션 컨텍스트와 설정을 모두 불러와 실제 웹 서버에 연결을 시도한다.</li>
</ul>
</li>
</ul>
<br/>
<ul>
<li><strong>즉, <code>@WebMvcTest</code> 와 <code>@SpringBootTest</code> 의 가장 큰 차이점은 얼마나 많은 설정과 컨텍스트를 불러오느냐에 있다.</strong></li>
</ul>
<p><br/><br/></p>
<h2 id="mockmvc">MockMvc</h2>
<h3 id="mockmvc-1">MockMvc란?</h3>
<ul>
<li>MockMvc는 서블릿 컨테이너의 구동 없이, 시뮬레이션된 MVC 환경에 모의 HTTP 서블릿 요청을 전송하는 기능을 제공하는 유틸리티 클래스다.</li>
<li>즉, 주로 Test에 사용되는 (특히 유닛테스트) 가짜 HTTP 통신 기능을 제공하는 클래스이다.</li>
</ul>
<br/>
<h3 id="section-2">관련 주요 메서드</h3>
<ul>
<li><code>MockMvc</code> 관련 메서드
<ul>
<li><code>mockMvc.perform(RequestBuilder requestBuilder)</code>
<ul>
<li>가짜 HTTP 요청을 수행하고 <code>ResultActions</code> 객체 (결과 데이터)를 반환한다.</li>
</ul>
</li>
<li><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/test/web/servlet/MockMvc.html">공식 API 문서</a></li>
</ul>
</li>
</ul>
<br/>
<ul>
<li><code>RequestBuilder</code> 관련 메서드
<ul>
<li><code>get(&quot;요청URL&quot;)</code>, <code>post(&quot;요청URL&quot;)</code>, <code>put(&quot;요청URL&quot;)</code>, <code>delete(&quot;요청URL&quot;)</code> …
<ul>
<li>메서드 방식을 선택하여 가짜 요청을 보낸다.</li>
</ul>
</li>
<li><code>content()</code>
<ul>
<li>요청 메시지의 바디를 직접 입력할 수 있다.</li>
</ul>
</li>
<li><code>contentType()</code>
<ul>
<li>요청 메시지의 contentType 헤더를 설정한다.</li>
</ul>
</li>
<li><code>accept()</code>
<ul>
<li>요청 메시지의 accept 헤더를 설정한다.</li>
</ul>
</li>
<li><code>session()</code>
<ul>
<li>요청 메시지와 함께 보낼 세션을 설정한다.</li>
</ul>
</li>
<li><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/test/web/servlet/RequestBuilder.html">공식 API 문서</a></li>
</ul>
</li>
</ul>
<br/>
<ul>
<li><code>ResultActions</code> 관련 메서드
<ul>
<li><code>resultActions.andExpect(ResultMatcher matcher)</code>
<ul>
<li><code>ResultActions</code> 객체 (결과 데이터)를 검증한다.</li>
<li>매개변수(ResultMatcher)로 <code>status().isOk()</code> , <code>content()</code> 등을 받을 수 있다.</li>
<li>검증할 수 있는 종류는 <strong><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/test/web/servlet/result/MockMvcResultMatchers.html">공식문서 참고</a></strong></li>
</ul>
</li>
<li><code>resultActions.andDo(ResultHandler handler)</code>
<ul>
<li>가짜요청에 응답한 결과에 대한 동작을 설정한다.</li>
<li>주요 매개변수: <code>print()</code></li>
</ul>
</li>
<li><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/test/web/servlet/ResultActions.html">공식 API 문서</a></li>
</ul>
</li>
</ul>
<br/>
<ul>
<li><code>ResultHandler</code> 관련 메서드
<ul>
<li><code>print()</code>
<ul>
<li><code>andDo()</code> 의 매개변수로 전달하여 응답 결과를 출력하도록 설정한다.</li>
</ul>
</li>
<li><a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/test/web/servlet/ResultHandler.html">공식 API 문서</a></li>
</ul>
</li>
</ul>
<p><br/><br/><br/></p>
<h1 id="section-3">종합 예시</h1>
<h2 id="spring-boot-starter-test--">spring-boot-starter-test 의존성 추가</h2>
<ul>
<li><code>@WebMvcTest</code> 를 비롯한 다양한 테스트 라이브러리를 사용하기 위해, spring-boot-starter-test 의존성을 추가해야한다.</li>
</ul>
<br/>
<h3 id="codebuildgradlecode-"><code>build.gradle</code> 파일</h3>
<div class="language-groovy highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dependencies</span> <span class="o">{</span>
	<span class="n">implementation</span> <span class="s1">'org.springframework.boot:spring-boot-starter-test'</span>
<span class="o">}</span>
</code></pre></div></div>
<p><br/><br/></p>
<h2 id="lombok--">Lombok 의존성 설정</h2>
<ul>
<li>만약 프로젝트에서 Lombok을 사용한다면, 테스트 코드에서도 적용할 수 있도록 아래와 같이 설정해야한다.</li>
</ul>
<br/>
<h3 id="codebuildgradlecode--1"><code>build.gradle</code> 파일</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dependencies</span> <span class="o">{</span>
	<span class="n">implementation</span> <span class="err">'</span><span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">boot</span><span class="o">:</span><span class="n">spring</span><span class="o">-</span><span class="n">boot</span><span class="o">-</span><span class="n">starter</span><span class="o">-</span><span class="n">test</span><span class="err">'</span>
<pre><code>&lt;span class=&quot;c1&quot;&gt;//기존&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;compileOnly&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;projectlombok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lombok&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;annotationProcessor&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;projectlombok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lombok&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//추가&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;testCompileOnly&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;projectlombok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lombok&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;testAnnotationProcessor&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;projectlombok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lombok&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'&lt;/span&gt;
</code></pre>
<p><span class="o">}</span>
</code></pre></div></div></p>
<p><br/><br/></p>
<h2 id="section-4">프로젝트 소스</h2>
<blockquote>
<p><strong><a href="https://github.com/TaegyunWoo/basic-web-CRUD">예시 프로젝트 다운로드</a></strong></p>
</blockquote>
<br/>
<h3 id="codeboardcontrollercode-"><code>BoardController</code> 클래스</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">web.crud.basic.basicweb.controller</span><span class="o">;</span>
<p><span class="kn">import</span> <span class="nn">…</span></p>
<p><span class="nd">@RequiredArgsConstructor</span> <span class="c1">//build.gradle에 설정해두었기 때문에, 테스트코드에서도 작동한다.</span>
<span class="nd">@Controller</span>
<span class="nd">@RequestMapping</span><span class="o">(</span><span class="s">”/board”</span><span class="o">)</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">BoardController</span> <span class="o">{</span></p>
<p><span class="kd">private</span> <span class="kd">final</span> <span class="nc">BoardService</span> <span class="n">boardService</span><span class="o">;</span></p>
<p><span class="nd">@GetMapping</span><span class="o">(</span><span class="s">”/{pageNum}”</span><span class="o">)</span>
<span class="kd">public</span> <span class="nc">String</span> <span class="nf">showBoard</span><span class="o">(</span><span class="nd">@PathVariable</span> <span class="kt">int</span> <span class="n">pageNum</span><span class="o">,</span>
<span class="nd">@SessionAttribute</span><span class="o">(</span><span class="n">name</span> <span class="o">=</span> <span class="s">“loginUser”</span><span class="o">,</span> <span class="n">required</span> <span class="o">=</span> <span class="kc">false</span><span class="o">)</span> <span class="nc">User</span> <span class="n">loginUser</span><span class="o">,</span>
<span class="nc">HttpServletRequest</span> <span class="n">request</span><span class="o">,</span>
<span class="nc">Model</span> <span class="n">model</span><span class="o">)</span> <span class="o">{</span></p>
<pre><code>&lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentPageNum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRequestURI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Article&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;articleList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boardService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAllArticles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;totalPageNumArr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getTotalPageNumArr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;articleList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;articleList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;articleList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getArticlesOfPage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pageNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;articleList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addAttribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;articleList&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;articleList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addAttribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;totalPageNumArr&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;totalPageNumArr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addAttribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;currentPageNum&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;currentPageNum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;addAttribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;totalPageNum&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;totalPageNumArr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;board&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
</code></pre>
<p><span class="o">}</span></p>
<p><span class="kd">private</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">getTotalPageNumArr</span><span class="o">(</span><span class="nc">List</span><span class="o">&lt;</span><span class="nc">Article</span><span class="o">&gt;</span> <span class="nc">TotalArticles</span><span class="o">)</span> <span class="o">{</span>
<span class="kt">double</span> <span class="n">totalArticleSize</span> <span class="o">=</span> <span class="nc">TotalArticles</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
<span class="kt">int</span> <span class="n">pageNum</span> <span class="o">=</span> <span class="o">(</span><span class="kt">int</span><span class="o">)</span> <span class="nc">Math</span><span class="o">.</span><span class="na">ceil</span><span class="o">(</span><span class="n">totalArticleSize</span><span class="o">/</span><span class="mi">3</span><span class="o">);</span>
<span class="kt">int</span><span class="o">[]</span> <span class="n">pageNumArr</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">pageNum</span><span class="o">];</span>
<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">pageNumArr</span><span class="o">.</span><span class="na">length</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
<span class="n">pageNumArr</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">;</span>
<span class="o">}</span>
<span class="k">return</span> <span class="n">pageNumArr</span><span class="o">;</span>
<span class="o">}</span></p>
<p><span class="o">}</span>
</code></pre></div></div>
<br/></p>
<h3 id="codeboardcontrollertestcode--"><code>BoardControllerTest</code> 테스트 클래스</h3>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">web.crud.basic.basicweb.controller</span><span class="o">;</span>
<p><span class="kn">import</span> <span class="nn">org.junit.jupiter.api.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.junit.jupiter.api.extension.ExtendWith</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.mockito.Mock</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.mockito.junit.jupiter.MockitoExtension</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.mock.web.MockHttpSession</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.test.context.ContextConfiguration</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.test.web.servlet.MockMvc</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.test.web.servlet.ResultActions</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.test.web.servlet.ResultMatcher</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.springframework.test.web.servlet.setup.MockMvcBuilders</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">web.crud.basic.basicweb.Service.BoardService</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">web.crud.basic.basicweb.WebConfig</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">web.crud.basic.basicweb.domain.Article</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">web.crud.basic.basicweb.domain.ArticleMapper</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">web.crud.basic.basicweb.domain.User</span><span class="o">;</span></p>
<p><span class="kn">import</span> <span class="nn">java.time.LocalDateTime</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span></p>
<p><span class="kn">import</span> <span class="nn">static</span> <span class="n">org</span><span class="o">.</span><span class="na">mockito</span><span class="o">.</span><span class="na">BDDMockito</span><span class="o">.</span><span class="na">given</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">static</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">test</span><span class="o">.</span><span class="na">web</span><span class="o">.</span><span class="na">servlet</span><span class="o">.</span><span class="na">request</span><span class="o">.</span><span class="na">MockMvcRequestBuilders</span><span class="o">.*;</span>
<span class="kn">import</span> <span class="nn">static</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">test</span><span class="o">.</span><span class="na">web</span><span class="o">.</span><span class="na">servlet</span><span class="o">.</span><span class="na">result</span><span class="o">.</span><span class="na">MockMvcResultHandlers</span><span class="o">.</span><span class="na">print</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">static</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">test</span><span class="o">.</span><span class="na">web</span><span class="o">.</span><span class="na">servlet</span><span class="o">.</span><span class="na">result</span><span class="o">.</span><span class="na">MockMvcResultMatchers</span><span class="o">.</span><span class="na">content</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">static</span> <span class="n">org</span><span class="o">.</span><span class="na">springframework</span><span class="o">.</span><span class="na">test</span><span class="o">.</span><span class="na">web</span><span class="o">.</span><span class="na">servlet</span><span class="o">.</span><span class="na">result</span><span class="o">.</span><span class="na">MockMvcResultMatchers</span><span class="o">.</span><span class="na">status</span><span class="o">;</span></p>
<p><span class="nd">@ExtendWith</span><span class="o">(</span><span class="nc">MockitoExtension</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="c1">//Mock 객체를 위한 확장모델 등록</span>
<span class="nd">@ContextConfiguration</span><span class="o">(</span><span class="n">classes</span> <span class="o">=</span> <span class="nc">WebConfig</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="c1">//Application Context(설정) 등록</span>
<span class="nd">@WebMvcTest</span><span class="o">(</span><span class="nc">BoardController</span><span class="o">.</span><span class="na">class</span><span class="o">)</span> <span class="c1">//테스트할 컨트롤러 지정</span>
<span class="kd">class</span> <span class="nc">BoardControllerTest</span> <span class="o">{</span></p>
<pre><code>&lt;span class=&quot;nd&quot;&gt;@Mock&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BoardService&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boardService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MockMvc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mockMvc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//@Autowired 가 없음에 주의!&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//MockMvc가 BoardController 를 사용할 수 있도록 설정&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@BeforeEach&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setUp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mockMvc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MockMvcBuilders&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;standaloneSetup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BoardController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@DisplayName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;게시판 보이기 테스트&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@Test&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;showBoardTest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Mock&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArticleMapper&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;articleMapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//---------- given ----------&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Article&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;articleList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;Article&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Article&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;Article&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;article2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Article&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;MockHttpSession&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MockHttpSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;article1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Article1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;article1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Article1 Content&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;article1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;article1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;LocalDateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;article2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Article2&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;article2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Article2 Content&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;article2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setWriter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;article2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setDateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;LocalDateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;articleList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;article1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;articleList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;article2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mockUser@test.com&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5L&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setPassword&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;123test!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mockUser&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//로그인 사용자 세션 추가&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;loginUser&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;given&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;boardService&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getAllArticles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;willReturn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;articleList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//---------- when ----------&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;ResultActions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mockMvc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;perform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/board/{pageNum}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//세션 정보 추가&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//---------- then ----------&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;actions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;andExpect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isOk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;andDo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
</code></pre>
<p><span class="o">}</span>
</code></pre></div></div></p>
<ul>
<li><code>@ContextConfiguration(classes = WebConfig.class)</code>
<ul>
<li><strong>애플리케이션의 설정정보(Application Context)를 지정한다.</strong></li>
<li><code>WebConfig.class</code> 는 <code>WebMvcConfigurer</code> 를 implements한 클래스이며, 인터럽트 등록 등의 작업을 설정한다.</li>
</ul>
</li>
</ul>
<br/>
<ul>
<li><code>@WebMvcTest(BoardController.class)</code>
<ul>
<li><strong><code>BoardController</code> 컨트롤러를 테스트할 것임을 설정한다.</strong></li>
</ul>
</li>
</ul>
<br/>
<ul>
<li><code>@Mock private BoardService boardService;</code>
<ul>
<li><code>BoardController</code> 를 생성하기 위해, 필요한 객체를 Mock으로 만든다.</li>
<li><strong>즉, <code>BoardController</code> 의 생성자로 받아야하는 <code>BoardService</code> 객체를 Mock으로 만든다.</strong></li>
</ul>
</li>
</ul>
<br/>
<ul>
<li><code>private MockMvc mockMvc</code>
<ul>
<li><strong><code>@Autowired</code> 를 적용하지 않는다. 왜냐하면 <code>@BeforeEach</code> 를 적용한 메서드를 통해, 테스트할 컨트롤러를 설정하여 <code>mockMvc</code> 변수에 저장할 것이기 때문이다.</strong></li>
</ul>
</li>
</ul>
<br/>
<ul>
<li><code>mockMvc = MockMvcBuilders.standaloneSetup(new BoardController(boardService)).build();</code>
<ul>
<li><strong><code>MockMvc</code>가 <code>BoardController</code> 를 사용할 수 있도록 설정한다.</strong></li>
</ul>
</li>
</ul>
<br/>
<ul>
<li><code>actions.andExpect(status().isOk()).andDo(print());</code>
<ul>
<li><strong>요청에 대한 검증을 수행한다.</strong></li>
<li>200 상태코드인지 확인하고</li>
<li>응답 메시지를 콘솔에 출력한다.</li>
</ul>
</li>
</ul>
<br/>
<blockquote>
<p>보다 자세한 사용예시는 다음 링크를 참고: <strong><a href="https://howtodoinjava.com/spring-boot2/testing/spring-boot-mockmvc-example/">사용 종합 예시 링크</a></strong></p>
</blockquote>
<br/>
<hr/>
<br/>
<blockquote>
<p>본 포스트는 갓대희님의 포스팅을 참고했습니다.<br />
관련 링크: <a href="https://goddaehee.tistory.com/212?category=367461">https://goddaehee.tistory.com/212?category=367461</a></p>
</blockquote>
:ET