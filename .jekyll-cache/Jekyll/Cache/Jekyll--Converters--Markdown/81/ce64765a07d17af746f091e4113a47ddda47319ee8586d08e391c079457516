I"&<p><br/><br/></p>
<h1 id="requestmappinghandleradapter">RequestMappingHandlerAdapter</h1>
<h2 id="requestmappinghandleradapter-">RequestMappingHandlerAdapter 란?</h2>
<ul>
<li>핸들러 어댑터의 한 종류로, <code>@RequestMapping</code> 을 처리하는 핸들러 어댑터이다.</li>
<li><a href="https://taegyunwoo.github.io/spring-mvc/SPRING_MVC_HTTPMessageConverter">이전 글</a>에서 다룬 HTTP 메시지 컨버터 기능을 가지고 있는 어댑터이다.</li>
</ul>
<p><br><br></p>
<h2 id="section">동작 방식</h2>
<p><img src="/assets/img/2021-07-29-SPRING_MVC_HandlerAdapterAndHttpMessageConverter/Untitled%205.png" alt="동작 방식" /></p>
<ol>
<li><code>DispatcherServlet</code> (프론트컨트롤러)가 핸들러 어댑터 <code>RequestMappingHandlerAdapter</code> 를 실행한다.</li>
<li><code>ArgumentResolver</code> 를 통해 ‘핸들러의 매개변수’에 값을 준다.</li>
<li>핸들러가 반환한 값을 <code>ReturnValueHandler</code> 가 전달받아서 <code>ModelAndView</code> 객체로 만들거나, <code>@ResponseBody</code> , <code>HttpEntity</code> 로 변환하여 핸들러 어댑터에게 전달해준다.</li>
<li>핸들러 어댑터는 변환된 값을 <code>DispatcherServlet</code> 에게 전달해준다.</li>
</ol>
<br>
<h3 id="argument-resolver">Argument Resolver</h3>
<ul>
<li>애노테이션 기반의 컨트롤러가 다양한 매개변수를 사용할 수 있도록 지원한다.</li>
<li><strong>컨트롤러(핸들러)가 필요로 하는 다양한 파라미터의 값(객체)을 생성하여, 컨트롤러에게 넘겨준다.</strong></li>
<li>Argument Resolver에 지정된 타입은 <code>@ModelAttribute</code> 로 가져올 수 없다.</li>
<li>또한 Argument Resolver로 컨트롤러에게 넘겨줄 타입을 직접 지정해서 넘겨줄 수 있다.</li>
</ul>
<br>
<h3 id="http---">HTTP 메시지 컨버터의 위치</h3>
<p><img src="/assets/img/2021-07-29-SPRING_MVC_HandlerAdapterAndHttpMessageConverter/Untitled%206.png" alt="HTTP 메시지 컨버터의 위치" /></p>
<ul>
<li>HTTP 메시지 컨버터가 작동하는 위치는 위 그림과 같다.</li>
<li>컨트롤러가 <code>@RequestBody</code> 나 <code>HttpEntity</code> 를 통해 매개변수를 제공받고자 하면 <strong>HTTP 메시지 컨버터가 작동</strong> 된다.</li>
<li>또한, 컨트롤러가 <code>@ResponseBody</code> 나 <code>HttpEntity</code> 객체를 반환하고자 하면 <strong>HTTP 메시지 컨버터가 작동</strong> 된다.</li>
</ul>
<br>
<h3 id="section-1">요청의 경우</h3>
<ul>
<li><code>@RequestBody</code> 를 처리하는 <code>ArgumentResolver</code> 가 있고,<br />
<code>HttpEntity</code> 를 처리하는 <code>ArgumentResolver</code> 가 있다.</li>
<li><strong>이때</strong> <code>ArgumentResolver</code> <strong>들이 HTTP 메시지 컨버터를 사용해서 필요한 객체를 생성하는 것이다.</strong></li>
</ul>
<br>
<h3 id="section-2">응답의 경우</h3>
<ul>
<li><code>@ResponseBody</code> 와 <code>HttpEntity</code> 를 처리하는 <code>ReturnValueHandler</code> 가 있다.</li>
<li><code>ReturnValueHandler</code> 가 HTTP 메시지 컨버터를 호출해서 응답 결과를 만든다.</li>
</ul>
<br>
<hr />
<br>
<p><a href="https://inf.run/RfTn"><img src="/assets/img/Inflearn_Spring_MVC1/Logo.png" width="400px" height="300px"></a></p>
<ul>
<li><em>본 게시글은 김영한님의 강의를 토대로 정리한 글입니다.</em></li>
<li><em>더 자세한 내용을 알고 싶으신 분들이 계신다면, 해당 강의를 수강하시는 것을 추천드립니다.</em></li>
</ul>
:ET