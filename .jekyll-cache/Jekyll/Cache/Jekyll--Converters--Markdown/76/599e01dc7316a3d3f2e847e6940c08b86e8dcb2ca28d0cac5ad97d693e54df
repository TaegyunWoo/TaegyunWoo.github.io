I"V	<p><br/><br/></p>
<h1 id="dynamic-programming--">Dynamic Programming : 개요</h1>
<h2 id="section">개요</h2>
<h3 id="section-1">동적 계획 알고리즘이란?</h3>
<ul>
<li>최적화 문제를 해결하는 알고리즘</li>
</ul>
<blockquote>
<p>최적화 문제: 최대, 최소 등을 구하는 문제</p>
</blockquote>
<br>
<h3 id="section-2">해결방식</h3>
<ul>
<li>입력 크기가 작은 부분 문제들을 모두 해결한 후에, 그 해들을 이용하여 보다 큰 크기의 부분 문제들을 해결한다.</li>
</ul>
<br>
<h3 id="vs-">분할정복 vs 동적계획</h3>
<p><img src="/assets/img/2021-07-20-ALGORITHM_DP_Begin/Untitled_47.png" alt="분할정복과 동적계획" /></p>
<ul>
<li>분할 정복 알고리즘
<ul>
<li>
<p>부분 해들을 각자 <strong>따로 취합</strong>하여, 보다 큰 문제의 해를 구한다.</p>
</li>
<li>
<p><strong>부분 문제의 해는 중복하여 사용하지 않는다.</strong></p>
</li>
</ul>
</li>
</ul>
<br>
<ul>
<li>동적 계획 알고리즘
<ul>
<li>
<p>최소 단위의 부분 문제의 해들 중 <strong>필요한 모든 해들을 활용</strong>하여 보다 큰 문제의 해를 구한다.</p>
</li>
<li>
<p><strong>부분 문제들 사이에 의존적 관계가 존재한다.</strong></p>
</li>
<li>
<p>함축적인 순서</p>
<p><img src="/assets/img/2021-07-20-ALGORITHM_DP_Begin/Untitled_48.png" alt="동적계획" /></p>
</li>
</ul>
</li>
</ul>
<br>
<h3 id="section-3">동적 계획 알고리즘이 적합한 경우</h3>
<ul>
<li>최적의 원리
<ul>
<li>
<p><strong>“어떤 문제에 대한 최적해”가 그 문제를 분할한 “부분문제에 대한 최적해”를 항상 포함하고 있을 때</strong></p>
</li>
<li>
<p>즉, “작은 문제의 최적해” ⊂ “큰 문제의 최적해”</p>
</li>
</ul>
</li>
<li>재귀적 해법이 부적절한 경우 (top-down 방식이 부적절한 경우)
<ul>
<li>분해된 문제가 서로 독립적이지 않은 경우 ⇒ 중복 호출 발생</li>
</ul>
<blockquote>
<p>ex) 피보나치 문제 등</p>
</blockquote>
</li>
</ul>
<p><br><br></p>
<hr />
<br>
<div style="font-style: italic;color: gray;">
  <ul>
    <li>성결대학교 컴퓨터 공학과 임태수 교수님 (2021)</li>
    <li>양성봉, 『알기 쉬운 알고리즘』</li>
  </ul>
  본 게시글은 위 강의 및 교재를 기반으로 정리한 글입니다.
</div>
:ET