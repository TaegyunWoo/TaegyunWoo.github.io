I"(.<p><br/><br/></p>
<blockquote>
<p><a href="https://github.com/TaegyunWoo/algorithm-study/blob/main/src/main/java/sort/%EA%B3%84%EC%88%98%EC%A0%95%EB%A0%AC.java">소스코드</a></p>
</blockquote>
<br/>
<h1 id="section">계수정렬</h1>
<h2 id="section-1">개요</h2>
<h3 id="section-2">계수정렬이란?</h3>
<ul>
<li>특정한 조건이 부합할 때만 사용할 수 있지만, 매우 빠른 정렬 알고리즘이다.</li>
<li><strong>데이터의 크기 범위가 제한되어 정수 형태로 표현할 수 있을 때</strong> 만 사용할 수 있다.</li>
<li>일반적으로 가장 큰 데이터와 가장 작은 데이터의 차이가 1,000,000을 넘지 않을 때, 효과적으로 사용할 수 있다.</li>
<li>가장 큰 데이터와 가장 작은 데이터의 차이가 너무 크다면 계수정렬을 사용할 수 없다.
<ul>
<li>왜냐하면 계수정렬을 이용할 때는 <strong>‘모든 범위를 담을 수 있는 크기의 리스트(배열)를 선언’</strong> 해야하기 때문이다.</li>
<li>차이가 너무 크다면, 배열의 크기 또한 상당히 커진다.</li>
</ul>
</li>
<li>계수정렬은 비교 기반의 정렬 알고리즘이 아니다.
<ul>
<li>비교 기반 정렬 알고리즘: 선택정렬, 삽입정렬, 퀵정렬</li>
</ul>
</li>
</ul>
<br/>
<h3 id="section-3">계수정렬 동작 과정</h3>
<blockquote>
<p>입력에 제한된 범위가 있고, 0보다 크거나 같은 정수라고 가정한다.</p>
</blockquote>
<ol>
<li>입력받은 수들 중, 가장 큰 수를 구한다. 그리고 <code>'가장 큰 수 값' + 1</code> 크기의 배열을 생성한다.<br />
(이때 생성된 배열의 원소들은 모두 0으로 초기화되어 있다.)</li>
<li>입력받은 수들을 하나씩 읽으며 아래 과정을 수행한다.
<ul>
<li>현재 읽은 수를 index로 갖는 원소에 ‘+1’을 수행한다.</li>
</ul>
</li>
<li>모든 수들을 읽었다면, 1번에서 만든 <strong>배열 자체</strong> 가 정렬된 형태라고 할 수 있다.
<ul>
<li>index: 숫자</li>
<li>value: 중복횟수</li>
</ul>
</li>
<li>따라서 각 index를 해당 value만큼 출력하면 된다.</li>
</ol>
<p><br/><br/></p>
<h2 id="section-4">예시</h2>
<h3 id="section-5">예시에서 사용할 배열 형태</h3>
<p><img src="/assets/img/2022-01-13-ALGORITHM_Sort_CoefSort/Untitled25.jpg" alt="" /></p>
<h3 id="step-01">Step 01</h3>
<p><img src="/assets/img/2022-01-13-ALGORITHM_Sort_CoefSort/Untitled26.jpg" alt="" /></p>
<h3 id="step-02">Step 02</h3>
<p><img src="/assets/img/2022-01-13-ALGORITHM_Sort_CoefSort/Untitled27.jpg" alt="" /></p>
<h3 id="step-03">Step 03</h3>
<p><img src="/assets/img/2022-01-13-ALGORITHM_Sort_CoefSort/Untitled28.jpg" alt="" /></p>
<h3 id="step-0414">Step 04~14</h3>
<blockquote>
<p>생략…</p>
</blockquote>
<h3 id="step-15">Step 15</h3>
<p><img src="/assets/img/2022-01-13-ALGORITHM_Sort_CoefSort/Untitled29.jpg" alt="" /></p>
<br/>
<h3 id="section-6">결과</h3>
<ul>
<li>오름차순으로 정렬되었다.</li>
</ul>
<div class="language-text highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0 -&gt; 0 -&gt; 1 -&gt; 1 -&gt; 2 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5 -&gt; 5 -&gt; 6 -&gt; 7 -&gt; 8 -&gt; 9 -&gt; 9
</code></pre></div></div>
<p><br/><br/></p>
<h2 id="section-7">소스코드</h2>
<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">계수정렬</span> <span class="o">{</span>
<p><span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="nf">solution</span><span class="o">(</span><span class="kt">int</span><span class="o">[]</span> <span class="n">n</span><span class="o">)</span> <span class="o">{</span>
<span class="c1">//배열 n의 각 원소는 정수이고, 0보다 크거나 같다고 가정한다.</span>
<span class="kt">int</span><span class="o">[]</span> <span class="n">sortAry</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">stream</span><span class="o">(</span><span class="n">n</span><span class="o">).</span><span class="na">max</span><span class="o">().</span><span class="na">getAsInt</span><span class="o">()</span> <span class="o">+</span> <span class="mi">1</span><span class="o">];</span></p>
<pre><code>&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sortAry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]++;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sortAry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
</code></pre>
<p><span class="o">}</span></p>
<p><span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">execute</span><span class="o">()</span> <span class="o">{</span>
<span class="nc">Scanner</span> <span class="n">scn</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Scanner</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">);</span>
<span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="n">scn</span><span class="o">.</span><span class="na">nextInt</span><span class="o">();</span>
<span class="kt">int</span><span class="o">[]</span> <span class="n">n</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">size</span><span class="o">];</span></p>
<pre><code>&lt;span class=&quot;n&quot;&gt;scn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;TimeCheck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;TimeCheck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
</code></pre>
<p><span class="o">}</span>
<span class="o">}</span></p>
<p></code></pre></div></div>
<br/></p>
<h2 id="section-8">복잡도</h2>
<h3 id="section-9">시간복잡도</h3>
<ul>
<li>모든 데이터가 양의 정수인 상황에서 데이터의 개수를 N, 데이터 중 최대값의 크기를 K라고 할 때, 계수 정렬의 시간 복잡도는 <code>O(N+K)</code> 이다.</li>
<li>배열의 모든 요소를 하나씩 확인해야하고, 만들어진 정답 배열에서 ‘최대크기를 갖는 숫자만큼 반복’ 해야하기 때문이다.</li>
</ul>
<br/>
<h3 id="section-10">공간복잡도</h3>
<ul>
<li>계수 정렬은 때에 따라, 심각한 비효율성을 초래할 수 있다.
<ul>
<li>예를 들어, 데이터가 ‘0’과 ‘999,999’ 오직 2개만 있다고 하자.</li>
<li>그럼 이때, 배열의 크기는 총 10,000,000이 된다.</li>
</ul>
</li>
<li>따라서 계수 정렬은 동일한 값을 가지는 데이터가 여러 개 등장할 때 적합하다.</li>
<li>데이터의 특성을 파악하기 어렵다면 퀵 정렬을 이용하는 것이 유리하다.</li>
</ul>
<p><br><br></p>
<hr />
<br>
<div style="font-style: italic;color: gray;">
  <ul>
    <li>나동빈, 『이것이 코딩 테스트다』</li>
  </ul>
  본 게시글은 위 교재를 기반으로 정리한 글입니다.
</div>
:ET